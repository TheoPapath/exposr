% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_exposure_response.R
\name{plot_exposure_response}
\alias{plot_exposure_response}
\title{Plot Exposure-Response Relationship}
\usage{
plot_exposure_response(
  data,
  dose_var,
  exposure_var,
  response_var,
  show_median_lines = TRUE,
  show_points = FALSE,
  effect_label_position = c("left", "right"),
  show_effect_lines = "none",
  external_df = NULL,
  external_mapping = NULL,
  xlims = NULL,
  ylims = NULL,
  vertical_line = NULL,
  xlab = NULL,
  ylab_top = NULL,
  ylab_bottom = NULL,
  log_scale = c("none", "logx", "logy", "logxy"),
  n_bins = 6,
  summary_type = c("geometric", "median", "mean"),
  add_trend = TRUE,
  trend_method = c("loess", "lm", "gam", "glm"),
  trend_ci = TRUE,
  trend_ci_level = 0.95,
  group_var = NULL
)
}
\arguments{
\item{data}{A data frame containing the dose, exposure, and response variables.}

\item{dose_var}{Unquoted name of the dose variable.}

\item{exposure_var}{Unquoted name of the exposure variable.}

\item{response_var}{Unquoted name of the response variable.}

\item{show_effect_lines}{Character; "none", "eff50", "eff90", or "both" to indicate which effect threshold lines to show.}

\item{external_df}{Optional data frame with predicted exposure-response values to overlay.}

\item{external_mapping}{A list of column names in external_df: list(x = ..., y = ..., lower = ..., upper = ..., group = ...).}

\item{xlims}{Optional vector of length 2 specifying x-axis limits.}

\item{ylims}{Optional vector of length 2 specifying y-axis limits for the upper panel.}

\item{vertical_line}{Optional numeric value where a vertical dashed line (e.g., EC50/EC90) will be drawn in both panels.}

\item{xlab}{Optional custom label for the x-axis (shared).}

\item{ylab_top}{Optional label for the y-axis of the top panel.}

\item{ylab_bottom}{Optional label for the y-axis of the bottom panel.}

\item{log_scale}{Character string: "none", "logx", "logy", or "logxy" to apply log scaling.}

\item{n_bins}{Number of exposure bins for summary statistics.}

\item{summary_type}{Summary function for exposure: "geometric", "median", or "mean".}

\item{add_trend}{Logical; whether to overlay a trend line.}

\item{trend_method}{Method for trend line: "loess", "lm", "gam", or "glm".}

\item{trend_ci}{Logical; whether to include a confidence interval ribbon around the trend.}

\item{trend_ci_level}{Confidence level for the trend CI.}

\item{group_var}{Optional unquoted grouping variable for color separation.}
}
\value{
A ggplot object with two panels: response vs exposure, and exposure vs dose.
}
\description{
Creates a two-panel ggplot visualization showing the relationship between dose, exposure, and response.
}
\examples{
set.seed(123)
n_placebo_per_trial <- 30
n_active_per_trial <- 120

df_trialA <- data.frame(
Dose = c(rep(0, n_placebo_per_trial), rep(c(50, 100, 300, 600), each = n_active_per_trial / 4)),
Trial = "Trial A"
)

df_trialB <- data.frame(
  Dose = c(rep(0, n_placebo_per_trial), rep(c(50, 100, 300, 600), each = n_active_per_trial / 4)),
Trial = "Trial B"
)

df_demo <- bind_rows(df_trialA, df_trialB)
n <- nrow(df_demo)

clearance <- ifelse(df_demo$Trial == "Trial A", 5, 6)
rate <- 1 / (df_demo$Dose / clearance)
rate[df_demo$Dose == 0] <- NA
exposure_vals <- rexp(n, rate = rate)
df_demo$Exposure <- ifelse(df_demo$Dose == 0, 0, exposure_vals)

effect_shift <- ifelse(df_demo$Trial == "Trial A", 0, 1.5)
df_demo$Response <- ifelse(df_demo$Dose == 0,
                           8 + effect_shift + rnorm(n, 0, 0.5),
                           8.5 + effect_shift + (7 * df_demo$Exposure / (50 + df_demo$Exposure)) + rnorm(n, 0, 0.5))

# Example external prediction data using fitted Emax model
library(minpack.lm)

# Fit Emax model by trial and generate predictions
external_pred <- df_demo \%>\%
  filter(Dose > 0) \%>\%
  group_by(Trial) \%>\%
  group_modify(~{
    df <- .x
  fit <- try(nlsLM(Response ~ E0 + Emax * Exposure / (EC50 + Exposure),
                   data = df,
                  start = list(E0 = 7, Emax = 6, EC50 = 50)), silent = TRUE)
  if (inherits(fit, "try-error")) return(NULL)
  pred_grid <- data.frame(Exposure = seq(0, max(df$Exposure), length.out = 100))
  preds <- predict(fit, newdata = pred_grid)
  pred_grid$Response <- preds
  pred_grid$Lower <- preds - 0.5
  pred_grid$Upper <- preds + 0.5
  pred_grid$Trial <- df$Trial[1]
 pred_grid
  }) \%>\%
  ungroup()

plot_exposure_response(
  df_demo, Dose, Exposure, Response,
  n_bins = 6, ylims = c(5,20),
  # vertical_line = 250,
  summary_type = "geometric",
  add_trend = FALSE,
  # trend_method = "loess",
  trend_ci = TRUE,
trend_ci_level = 0.95,
  group_var = Trial,
  external_df = external_pred,
  external_mapping = list(x = "Exposure", y = "Response", lower = "Lower", upper = "Upper", group = "Trial"),
  log_scale = "none", show_effect_lines = "eff90", effect_label_position = "right"
)
}
